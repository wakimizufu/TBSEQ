/*
テンポボリュームを定期的に更新/値を返す
*/

#ifndef tempo_h
#define tempo_h

#include "Arduino.h"
#include "countTriger.h"

//読み取り間隔カウンタ閾値 9.984msec (32us * 312カウント)
#define THD_TEMPO 312
#define TEMPO_CNV_ROW_MAX 256
#define TEMPO_CNV_COL_MAX 2

#define TEMPO_COL_TEMPO 1
#define TEMPO_COL_COUNT 2

class tempo: public countTriger
{
  public:

		/*
		コンストラクタ
		start     :カウンタ開始値(デフォルト=0)
		*/
    explicit tempo(unsigned int start = 0):countTriger(	THD_TEMPO	,	start)	{
		}

		/*
		[仮想関数]カウンタ閾値に達した⇒MIDIクロックがカウントアップをセット
		*/
    virtual void trigger(){
			_adc_value	=	analogRead(0);
		};

		/*
		テンポ値を取得する
		戻り値:テンポ値(30～240)
		*/
		int	getTempo(){
			return	convertArray[_adc_value][TEMPO_COL_TEMPO];
		}

		/*
		テンポに対する32usカウント閾値を取得する
		戻り値:32usカウント閾値
		*/
		int	getCountThd(){
			return	convertArray[_adc_value][TEMPO_COL_COUNT];
		}

  protected:
    int	_adc_value;	//ADC読み取り値

		//ADC読み取り値(インデックス)⇒テンポ値/32usカウント閾値配列({テンポ値,})
		int convertArray[TEMPO_CNV_ROW_MAX][TEMPO_CNV_COL_MAX]	={
			{30,2604},
			{31,2520},
			{32,2441},
			{32,2441},
			{33,2367},
			{34,2298},
			{35,2232},
			{36,2170},
			{37,2111},
			{37,2111},
			{38,2056},
			{39,2003},
			{40,1953},
			{41,1905},
			{41,1905},
			{42,1860},
			{43,1817},
			{44,1776},
			{45,1736},
			{46,1698},
			{46,1698},
			{47,1662},
			{48,1628},
			{49,1594},
			{50,1563},
			{51,1532},
			{51,1532},
			{52,1502},
			{53,1474},
			{54,1447},
			{55,1420},
			{56,1395},
			{56,1395},
			{57,1371},
			{58,1347},
			{59,1324},
			{60,1302},
			{60,1302},
			{61,1281},
			{62,1260},
			{63,1240},
			{64,1221},
			{65,1202},
			{65,1202},
			{66,1184},
			{67,1166},
			{68,1149},
			{69,1132},
			{70,1116},
			{70,1116},
			{71,1100},
			{72,1085},
			{73,1070},
			{74,1056},
			{75,1042},
			{75,1042},
			{76,1028},
			{77,1015},
			{78,1002},
			{79,989},
			{79,989},
			{80,977},
			{81,965},
			{82,953},
			{83,941},
			{84,930},
			{84,930},
			{85,919},
			{86,908},
			{87,898},
			{88,888},
			{89,878},
			{89,878},
			{90,868},
			{91,859},
			{92,849},
			{93,840},
			{94,831},
			{94,831},
			{95,822},
			{96,814},
			{97,805},
			{98,797},
			{99,789},
			{99,789},
			{100,781},
			{101,774},
			{102,766},
			{103,758},
			{103,758},
			{104,751},
			{105,744},
			{106,737},
			{107,730},
			{108,723},
			{108,723},
			{109,717},
			{110,710},
			{111,704},
			{112,698},
			{113,691},
			{113,691},
			{114,685},
			{115,679},
			{116,673},
			{117,668},
			{118,662},
			{118,662},
			{119,657},
			{120,651},
			{121,646},
			{122,640},
			{122,640},
			{123,635},
			{124,630},
			{125,625},
			{126,620},
			{127,615},
			{127,615},
			{128,610},
			{129,606},
			{130,601},
			{131,596},
			{132,592},
			{132,592},
			{133,587},
			{134,583},
			{135,579},
			{136,574},
			{137,570},
			{137,570},
			{138,566},
			{139,562},
			{140,558},
			{141,554},
			{141,554},
			{142,550},
			{143,546},
			{144,539},
			{145,535},
			{146,533},
			{146,533},
			{147,531},
			{148,528},
			{149,524},
			{150,521},
			{151,517},
			{151,517},
			{152,514},
			{153,511},
			{154,507},
			{155,504},
			{156,501},
			{156,501},
			{157,498},
			{158,494},
			{159,491},
			{160,488},
			{160,488},
			{161,485},
			{162,482},
			{163,479},
			{164,476},
			{165,473},
			{165,473},
			{166,471},
			{167,468},
			{168,465},
			{169,462},
			{170,460},
			{170,460},
			{171,457},
			{172,454},
			{173,452},
			{174,449},
			{175,446},
			{175,446},
			{176,444},
			{177,441},
			{178,439},
			{179,436},
			{179,436},
			{180,434},
			{181,432},
			{182,429},
			{183,427},
			{184,425},
			{184,425},
			{185,422},
			{186,420},
			{187,418},
			{188,416},
			{189,413},
			{189,413},
			{190,411},
			{191,409},
			{192,407},
			{193,405},
			{194,403},
			{194,403},
			{195,401},
			{196,399},
			{197,397},
			{198,395},
			{199,393},
			{199,393},
			{200,391},
			{201,389},
			{202,387},
			{203,385},
			{203,385},
			{204,383},
			{205,381},
			{206,379},
			{207,377},
			{208,376},
			{208,376},
			{209,374},
			{210,372},
			{211,370},
			{212,369},
			{213,367},
			{213,367},
			{214,365},
			{215,363},
			{216,362},
			{217,360},
			{218,358},
			{218,358},
			{219,357},
			{220,355},
			{221,354},
			{222,352},
			{222,352},
			{223,350},
			{224,349},
			{225,347},
			{226,346},
			{227,344},
			{227,344},
			{228,343},
			{229,341},
			{230,340},
			{231,338},
			{232,337},
			{232,337},
			{233,335},
			{234,334},
			{235,332},
			{236,331},
			{237,330},
			{237,330},
			{238,328},
			{239,327},
			{240,326},
			{240,326}
		};

};

#endif